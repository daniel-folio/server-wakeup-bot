name: Sync to A Repository

on:
  push:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # 1. B 저장소(원본)의 코드를 'B_Repo' 폴더에 다운로드합니다.
      - name: Checkout B Repository (Source)
        uses: actions/checkout@v4
        with:
          path: B_Repo

      # 2. A 저장소(대상)의 코드를 'A_Repo' 폴더에 다운로드합니다.
      - name: Checkout A Repository (Destination)
        uses: actions/checkout@v4
        with:
          repository: daniel-works0001/server-wakeup-bot
          token: ${{ secrets.A_REPO_PAT }} # A 저장소에 접근하기 위한 토큰
          path: A_Repo

      # 3. B폴더의 내용을 A폴더로 복사합니다. (.github 폴더는 제외)
      - name: Sync files from B to A (exclude workflows)
        run: |
          rsync -av --delete --exclude='.github/' B_Repo/ A_Repo/

      # 4. 변경된 내용을 A 저장소에 명확한 커밋 메시지와 함께 푸시합니다.
      - name: Commit and Push to A Repository
        run: |
          cd A_Repo
          git checkout main # 이 라인을 추가하여 main 브랜치로 이동합니다.
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Sync code from B repository (${{ github.sha }})"
            git push https://${{ secrets.A_REPO_PAT }}@github.com/daniel-works0001/server-wakeup-bot.git
          else
            echo "No changes to sync."
          fi